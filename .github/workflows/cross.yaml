on:
  push:
    branches:
      - main
      - release-*
  pull_request:

name: Cross Platfrom Build
jobs:
  args: 
    runs-on: ubuntu-latest
    outputs:
      commit-date: ${{ steps.ldflags.outputs.commit-date }}
      commit: ${{ steps.ldflags.outputs.commit }}
      version: ${{ steps.ldflags.outputs.version }}
      tree-state: ${{ steps.ldflags.outputs.tree-state }}
    steps:
      - id: checkout
        uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # tag=v2.3.4
        with:
          fetch-depth: 0
      - id: ldflags
        run: |
          echo "::set-output name=commit-date::$(git log --date=iso8601-strict -1 --pretty=%ct)"
          echo "::set-output name=commit::$GITHUB_SHA"
          echo "::set-output name=version::$(git describe --tags --always --dirty | cut -c2-)"
          echo "::set-output name=tree-state::$(if git diff --quiet; then echo "clean"; else echo "dirty"; fi)"

  sanity-build:
    name: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '1.18.x'
      - name: compile
        run: |
          make build
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        include:
          - os: macos-latest
            TARGET: kubectl-sigstore-darwin-amd64
            # COSIGN_PASSWORD: COSIGN_PASSWORD
          - os: ubuntu-latest
            TARGET: kubectl-sigstore-linux-amd64
            # COSIGN_PASSWORD: COSIGN_PASSWORD
          - os: windows-latest
            TARGET: kubectl-sigstore-windows-amd64.exe
            # COSIGN_PASSWORD: COSIGN_PASSWORD
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.18.x'
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build
        run: make build && mv ./kubectl-sigstore ./${{matrix.TARGET}}
      - name: Print Info
        shell: pwsh
        run: |
          $hash=Get-FileHash -Path ./${{matrix.TARGET}}
          Write-Output $($hash.Hash + " " + $(([io.fileinfo]$hash.path).basename)) | Tee-Object -Path ${{matrix.TARGET}}.sha256
      # - name: Sign
      #   shell: bash
      #   env:
      #     COSIGN_PASSWORD: ${{secrets[matrix.COSIGN_PASSWORD]}}
      #   if: github.event_name != 'pull_request'
      #   run: |
      #     ./${{matrix.TARGET}} sign-blob -key ./.github/workflows/cosign.key ./${{matrix.TARGET}} > ${{matrix.TARGET}}.sig
      # - name: Verify
      #   if: github.event_name != 'pull_request'
      #   run: ./${{matrix.TARGET}} verify-blob -key ./.github/workflows/cosign.pub -signature ${{matrix.TARGET}}.sig ./${{matrix.TARGET}}
      - name: Upload artifacts
        if: github.event_name != 'pull_request'
        uses: actions/upload-artifact@v2
        with:
          name: artifacts
          path: |
            kubectl-sigstore-*
            kubectl-sigstore-*.sha256
          # kubectl-sigstore-*.sig

      - name: SLSA Provenance
        if: github.event_name != 'pull_request'
        permissions:
          id-token: write # To sign the provenance.
          contents: write # To upload assets to release.
          actions: read # To read the workflow path.
        needs: args
        uses: slsa-framework/slsa-github-generator/.github/workflows/builder_go_slsa3.yml@v1.2.0
        with:
          go-version: 1.18
          # Optional: only needed if using ldflags.
          evaluated-envs: "COMMIT_DATE:${{needs.args.outputs.commit-date}}, COMMIT:${{needs.args.outputs.commit}}, VERSION:${{needs.args.outputs.version}}, TREE_STATE:${{needs.args.outputs.tree-state}}"
